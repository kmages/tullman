from flask import Flask, jsonify
app = Flask(__name__)

@app.route("/api/health")
def health():
    return jsonify({"ok": True, "service": "log_review_backend"})


# ----- Minimal counters -----
@app.route("/api/counters", methods=["GET"])
def counters():
    try:
        total = QAPair.query.filter(QAPair.is_excluded == False).count()  # noqa: E712
    except Exception:
        total = 0
    return jsonify({"review_queue": 0, "log_total": total, "log_today": 0})

# ----- Examples list/create -----
@app.route("/api/examples", methods=["GET"])
def examples_list():
    items = Example.query.order_by(Example.created_at.asc()).all()
    return jsonify({"items":[e.as_dict() for e in items], "count":len(items)})

@app.route("/api/examples", methods=["POST"])
def examples_create():
    d = request.get_json(force=True) or {}
    pq=(d.get("primary_question") or "").strip()
    ans=(d.get("answer") or "").strip()
    if not pq or not ans:
        return jsonify({"error":"primary_question and answer are required"}), 400
    ex = Example(primary_question=pq, answer=ans,
                 aliases=d.get("aliases") or [],
                 label=d.get("label"),
                 active=bool(d.get("active",True)),
                 locked=bool(d.get("locked",True)))
    db.session.add(ex); db.session.commit()
    return jsonify({"ok":True,"example":ex.as_dict()}), 201

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5057, debug=False)
